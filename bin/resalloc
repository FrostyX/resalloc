#!/usr/bin/env python

# Resalloc client.
# Copyright (C) 2017 Red Hat, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

import sys
import argparse

from resalloc.client import Ticket, Connection

parser = argparse.ArgumentParser()
parser.add_argument(
        "--connection", dest="connection", default="http://localhost:8000")

subparsers = parser.add_subparsers(title="actions", dest='subparser')
subparsers.required = True
parser_new_ticket = subparsers.add_parser(
        "ticket",
        help="Create ticket")
parser_new_ticket.add_argument(
        "--tag", dest="create_tags", action="append",
        help="What tag the Resource should have")
parser_get_ticket = subparsers.add_parser(
        "ticket-get",
        help="Obtain ticket")
parser_get_ticket.add_argument(
        "ticket",
        help="Get the ticket")
parser_wait_ticket = subparsers.add_parser(
        "ticket-wait",
        help="Wait till ticket is ready and write the output"
)
parser_wait_ticket.add_argument(
        "ticket",
        help="Get the ticket")
parser_close_ticket = subparsers.add_parser(
        "ticket-close",
        help="Close a ticket")
parser_close_ticket.add_argument(
        "ticket",
        help="Get the ticket")

def main():
    try:
        arg = parser.parse_args()

        if 'ticket' == arg.subparser:
            conn = Connection(arg.connection)
            ticket = conn.newTicket(arg.create_tags)
            print(ticket.id)
        elif 'ticket-get' == arg.subparser:
            conn = Connection(arg.connection)
            ticket = conn.getTicket(arg.ticket)
            if ticket.collect():
                sys.stdout.write(str(ticket.output))
            else:
                sys.stderr.write("ticket is still not processed\n")
        elif 'ticket-wait' == arg.subparser:
            conn = Connection(arg.connection)
            ticket = conn.getTicket(arg.ticket)
            output = ticket.wait()
            sys.stderr.write(str(output))
        elif 'ticket-close' == arg.subparser:
            conn = Connection(arg.connection)
            ticket = conn.getTicket(arg.ticket)
            ticket.close()
        else:
            assert(0)

    except KeyboardInterrupt:
        sys.stderr.write("\nInterrupted by user.")
        sys.exit(1)

if __name__ == "__main__":
    sys.exit(main())
